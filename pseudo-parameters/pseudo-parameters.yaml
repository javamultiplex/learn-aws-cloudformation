AWSTemplateFormatVersion: '2010-09-09'

Description: AWS CloudFormation workshop - Pseudo parameters (uksb-1q9p31idr).

# Add your code here!
Parameters:
  DatabaseUserName:
    Type: String
    Default: alice
    AllowedPattern: ^[a-z0-9]{5,12}$
    Description: Value to be used with the dbUsername SSM parameter. The default value is set to 'alice', which users can override when creating a CloudFormation stack.
  S3BucketPrefix:
    Type: String
    Description: AWS S3 Bucket prefix

Resources:
  BasicParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: dbUsername
      Type: String
      Value: !Ref DatabaseUserName
      Description: SSM Parameter for database username.
  DemoRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: ssm-list-privilege
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: ssm:GetParameter
                Resource: !Sub 'arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${BasicParameter}'
  DemoLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.lambda_handler
      Runtime: python3.8
      Role: !GetAtt DemoRole.Arn
      Code:
        ZipFile: |
          import boto3
          client=boto3.client('ssm')
          def lambda_handler(event, context):
            response=client.get_parameter(Name='dbUsername')
            print(f'SSM dbUsername parameter value: {response["Parameter"]["Value"]}')

  DemoS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${S3BucketPrefix}-${AWS::Region}-${AWS::AccountId}
